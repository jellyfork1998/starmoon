{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\STARMOON\\\\src\\\\components\\\\DrawSvg.js\",\n    _s = $RefreshSig$();\n\nimport gsap from 'gsap';\nimport ScrollTrigger from 'gsap/ScrollTrigger';\nimport React, { useLayoutEffect, useRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport Vector from '../Icons/Vector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VectorContainer = styled.div`\nposition: absolute;\ntop: 0.5rem;\nleft: 50%;\ntransform: translateX(-50%);\nwidth: 100%;\nheight: 100%;\noverflow: hidden;\n\n\nsvg{\n  display: inline-block;\n    width: 100%;\n    height: 100%;\n    background: white;\n   \n}\n\n@media (max-width: 48em) {\nleft: 1rem;\n}\n`;\n_c = VectorContainer;\nconst Bounce = keyframes`\nfrom {  transform: translateX(-50%) scale(0.5);   }\nto {  transform: translateX(-50%) scale(1);   }\n\n\n`;\nconst Ball = styled.div`\nposition: absolute;\ntop: 0;\nleft: 50%;\ntransform: translateX(-50%);\nwidth: 1.5rem;\nheight: 1.5rem;\nborder-radius: 50%;\nbackground-color: ${props => props.theme.text};\nanimation: ${Bounce} 0.5s linear infinite alternate;\n\n@media (max-width: 48em) {\nleft: 1rem;\n}\n`;\n_c2 = Ball;\n\nconst DrawSvg = () => {\n  _s();\n\n  const ref = useRef(null);\n  const ballRef = useRef(null);\n  gsap.registerPlugin(ScrollTrigger);\n  useLayoutEffect(() => {\n    let element = ref.current;\n    let svg = document.getElementsByClassName(\"svg-path\")[0];\n    const length = svg.getTotalLength(); //   start positioning of svg drawing\n\n    svg.style.strokeDasharray = length; // Hide svg before scrolling start\n\n    svg.style.strokeDashoffset = length;\n    let t1 = gsap.timeline({\n      scrollTrigger: {\n        trigger: element,\n        start: \"top center\",\n        end: \"bottom bottom\",\n        onUpdate: self => {\n          const draw = length * self.progress; // also reverse the drawing when scroll goes up\n\n          svg.style.strokeDashoffset = length - draw;\n        },\n        onToggle: self => {\n          if (self.isActive) {\n            // console.log(\"Scrolling is active\");\n            ballRef.current.style.display = 'none';\n          } else {\n            // console.log(\"Scrolling is not active\");\n            ballRef.current.style.display = 'inline-block';\n          }\n        }\n      }\n    });\n    return () => {\n      if (t1) t1.kill();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Ball, {\n      ref: ballRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VectorContainer, {\n      ref: ref,\n      children: /*#__PURE__*/_jsxDEV(Vector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DrawSvg, \"WK29fPyOl6RxwVoGkVVjQjAGTP8=\");\n\n_c3 = DrawSvg;\nexport default DrawSvg;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"VectorContainer\");\n$RefreshReg$(_c2, \"Ball\");\n$RefreshReg$(_c3, \"DrawSvg\");","map":{"version":3,"names":["gsap","ScrollTrigger","React","useLayoutEffect","useRef","styled","keyframes","Vector","VectorContainer","div","Bounce","Ball","props","theme","text","DrawSvg","ref","ballRef","registerPlugin","element","current","svg","document","getElementsByClassName","length","getTotalLength","style","strokeDasharray","strokeDashoffset","t1","timeline","scrollTrigger","trigger","start","end","onUpdate","self","draw","progress","onToggle","isActive","display","kill"],"sources":["C:/Users/akash/Desktop/STARMOON/src/components/DrawSvg.js"],"sourcesContent":["import gsap from 'gsap';\nimport ScrollTrigger from 'gsap/ScrollTrigger';\nimport React, { useLayoutEffect, useRef } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport Vector from '../Icons/Vector'; \n\nconst VectorContainer = styled.div`\nposition: absolute;\ntop: 0.5rem;\nleft: 50%;\ntransform: translateX(-50%);\nwidth: 100%;\nheight: 100%;\noverflow: hidden;\n\n\nsvg{\n  display: inline-block;\n    width: 100%;\n    height: 100%;\n    background: white;\n   \n}\n\n@media (max-width: 48em) {\nleft: 1rem;\n}\n`\nconst Bounce = keyframes`\nfrom {  transform: translateX(-50%) scale(0.5);   }\nto {  transform: translateX(-50%) scale(1);   }\n\n\n`\n\nconst Ball = styled.div`\nposition: absolute;\ntop: 0;\nleft: 50%;\ntransform: translateX(-50%);\nwidth: 1.5rem;\nheight: 1.5rem;\nborder-radius: 50%;\nbackground-color: ${props => props.theme.text};\nanimation: ${Bounce} 0.5s linear infinite alternate;\n\n@media (max-width: 48em) {\nleft: 1rem;\n}\n`\n\nconst DrawSvg = () => {\nconst ref = useRef(null);\nconst ballRef = useRef(null);\n\n\ngsap.registerPlugin(ScrollTrigger);\nuseLayoutEffect(() => {\n  let element = ref.current;\n\n  let svg = document.getElementsByClassName(\"svg-path\")[0];\n\n  const length = svg.getTotalLength(); \n\n  \n//   start positioning of svg drawing\nsvg.style.strokeDasharray = length;\n\n// Hide svg before scrolling start\nsvg.style.strokeDashoffset = length;\n\n  let t1 = gsap.timeline({\n    scrollTrigger:{\n        trigger:element,\n        start:\"top center\",\n        end:\"bottom bottom\",\n        onUpdate: (self) => {\n            const draw = length * self.progress;\n\n            // also reverse the drawing when scroll goes up\n            svg.style.strokeDashoffset = length - draw;\n        },\n        onToggle: self => {\n            if(self.isActive){\n                // console.log(\"Scrolling is active\");\n                ballRef.current.style.display = 'none';\n            }else{\n                // console.log(\"Scrolling is not active\");\n                ballRef.current.style.display = 'inline-block';\n\n            }\n        }\n    }\n  })\n\n  return () => {\n    if(t1) t1.kill();\n  };\n}, [])\n\n  return (\n    <>\n        <Ball ref={ballRef}/>\n        <VectorContainer ref={ref}>\n        <Vector />\n    </VectorContainer>\n    </>\n  )\n}\n\nexport default DrawSvg"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,KAAP,IAAgBC,eAAhB,EAAiCC,MAAjC,QAA+C,OAA/C;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;AAEA,MAAMC,eAAe,GAAGH,MAAM,CAACI,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBA;KAAMD,e;AAsBN,MAAME,MAAM,GAAGJ,SAAU;AACzB;AACA;AACA;AACA;AACA,CALA;AAOA,MAAMK,IAAI,GAAGN,MAAM,CAACI,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoBG,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,IAAK;AAC9C,aAAaJ,MAAO;AACpB;AACA;AACA;AACA;AACA,CAdA;MAAMC,I;;AAgBN,MAAMI,OAAO,GAAG,MAAM;EAAA;;EACtB,MAAMC,GAAG,GAAGZ,MAAM,CAAC,IAAD,CAAlB;EACA,MAAMa,OAAO,GAAGb,MAAM,CAAC,IAAD,CAAtB;EAGAJ,IAAI,CAACkB,cAAL,CAAoBjB,aAApB;EACAE,eAAe,CAAC,MAAM;IACpB,IAAIgB,OAAO,GAAGH,GAAG,CAACI,OAAlB;IAEA,IAAIC,GAAG,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,UAAhC,EAA4C,CAA5C,CAAV;IAEA,MAAMC,MAAM,GAAGH,GAAG,CAACI,cAAJ,EAAf,CALoB,CAQtB;;IACAJ,GAAG,CAACK,KAAJ,CAAUC,eAAV,GAA4BH,MAA5B,CATsB,CAWtB;;IACAH,GAAG,CAACK,KAAJ,CAAUE,gBAAV,GAA6BJ,MAA7B;IAEE,IAAIK,EAAE,GAAG7B,IAAI,CAAC8B,QAAL,CAAc;MACrBC,aAAa,EAAC;QACVC,OAAO,EAACb,OADE;QAEVc,KAAK,EAAC,YAFI;QAGVC,GAAG,EAAC,eAHM;QAIVC,QAAQ,EAAGC,IAAD,IAAU;UAChB,MAAMC,IAAI,GAAGb,MAAM,GAAGY,IAAI,CAACE,QAA3B,CADgB,CAGhB;;UACAjB,GAAG,CAACK,KAAJ,CAAUE,gBAAV,GAA6BJ,MAAM,GAAGa,IAAtC;QACH,CATS;QAUVE,QAAQ,EAAEH,IAAI,IAAI;UACd,IAAGA,IAAI,CAACI,QAAR,EAAiB;YACb;YACAvB,OAAO,CAACG,OAAR,CAAgBM,KAAhB,CAAsBe,OAAtB,GAAgC,MAAhC;UACH,CAHD,MAGK;YACD;YACAxB,OAAO,CAACG,OAAR,CAAgBM,KAAhB,CAAsBe,OAAtB,GAAgC,cAAhC;UAEH;QACJ;MAnBS;IADO,CAAd,CAAT;IAwBA,OAAO,MAAM;MACX,IAAGZ,EAAH,EAAOA,EAAE,CAACa,IAAH;IACR,CAFD;EAGD,CAzCc,EAyCZ,EAzCY,CAAf;EA2CE,oBACE;IAAA,wBACI,QAAC,IAAD;MAAM,GAAG,EAAEzB;IAAX;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,eAAD;MAAiB,GAAG,EAAED,GAAtB;MAAA,uBACA,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADF;AAQD,CAzDD;;GAAMD,O;;MAAAA,O;AA2DN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}